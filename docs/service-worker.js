"use strict";var precacheConfig=[["/index.html","30696c88270dfb37ea9505b63021797b"],["/static/css/main.7552e1c0.css","2f29d0ff4c136a71e6d52528a0d84ea0"],["/static/js/main.8352aa38.js","5588f24346ce684cd6ad379622909fd2"],["/static/media/1.bd63d005.jpg","bd63d00550899d17d96eab0e523e191a"],["/static/media/10.d751435c.jpg","d751435c79f8947a09d2247b694c9f38"],["/static/media/11.75105300.jpg","751053009988ada921063b9c976a0231"],["/static/media/12.851d6074.jpg","851d60748c878027e7a52c42c441b138"],["/static/media/13.4f0b2bbd.jpg","4f0b2bbd13d80bb56db798dffb9bf438"],["/static/media/14.707f3ac5.jpg","707f3ac5e9fc103169b34fe0b01f59d3"],["/static/media/15.a3b5eb2f.jpg","a3b5eb2fd4be679210afd738fcf8edb8"],["/static/media/16.ffa5badd.jpg","ffa5badd054f465bf879543954816c29"],["/static/media/2.6fd1361a.jpg","6fd1361a03f7cf3438b3aab6bc409c7e"],["/static/media/3.c88397ea.jpg","c88397eabc61b0cd856c63dba9af15f6"],["/static/media/4.ace3d5b7.jpg","ace3d5b785f01689d46740d26b55d68a"],["/static/media/5.cdb00628.jpg","cdb0062838530082085a0dd3e2f0b1d1"],["/static/media/6.1555904a.jpg","1555904a3ed0f25d93fafb91d409d99e"],["/static/media/7.ed3b6061.jpg","ed3b6061163c390a6c6a9aea559e6d06"],["/static/media/8.be1a90b6.jpg","be1a90b6fc3184f6a923cb3720b92ec4"],["/static/media/9.120c52ed.jpg","120c52ed00e61c10a538b35b498020e4"],["/static/media/iconfont.2158271c.woff","2158271c3dad8c7f0536c0ebcc33f57e"],["/static/media/iconfont.3ef19b7c.svg","3ef19b7ca6985fba9b3d17108844ff86"],["/static/media/iconfont.50a6d6ab.eot","50a6d6ab565cc550b6a5882d76d8c5f7"],["/static/media/iconfont.bda04bcf.ttf","bda04bcf4d16fe29f959595d6f24e224"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var c="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});